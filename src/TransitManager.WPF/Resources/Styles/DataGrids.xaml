<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">

    <!-- Style de DataGrid personnalisé -->
    <Style x:Key="CustomDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource MaterialDesignDataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
        <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Recycling"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="materialDesign:DataGridAssist.CellPadding" Value="16 12"/>
        <Setter Property="materialDesign:DataGridAssist.ColumnHeaderPadding" Value="16 12"/>
        <Setter Property="Background" Value="{DynamicResource MaterialDesignPaper}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- Style d'en-tête de colonne -->
    <Style x:Key="CustomDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" 
           BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}">
        <Setter Property="Background" Value="{DynamicResource MaterialDesignToolBarBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="48"/>
        <Setter Property="Padding" Value="16,0"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
    </Style>

    <!-- Style de ligne de DataGrid -->
    <Style x:Key="CustomDataGridRowStyle" TargetType="DataGridRow" 
           BasedOn="{StaticResource MaterialDesignDataGridRow}">
        <Setter Property="Height" Value="52"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
                <Setter Property="BorderThickness" Value="2,0,0,0"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource MaterialDesignSelection}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignDivider}"/>
            </MultiTrigger>
            <EventTrigger RoutedEvent="DataGrid.GotFocus">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                       From="0.7" To="1" Duration="0:0:0.2"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <!-- Style de cellule de DataGrid -->
    <Style x:Key="CustomDataGridCellStyle" TargetType="DataGridCell" 
           BasedOn="{StaticResource MaterialDesignDataGridCell}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,12"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}"
                          Padding="{TemplateBinding Padding}">
                        <ContentPresenter VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style pour les colonnes de texte -->
    <Style x:Key="DataGridTextColumnStyle" TargetType="TextBlock">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
        <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=Text}"/>
    </Style>

    <!-- Style pour les colonnes de montants -->
	<Style x:Key="DataGridAmountColumnStyle" TargetType="TextBlock" BasedOn="{StaticResource DataGridTextColumnStyle}">
		<Setter Property="HorizontalAlignment" Value="Right"/>
		<Setter Property="FontFamily" Value="Consolas"/>
		
		<!-- DataTrigger -->

		<Style.Triggers>
			<DataTrigger Binding="{Binding Path=., Converter={StaticResource GreaterThanZeroConverter}}" Value="False">
				<Setter Property="Foreground" Value="{StaticResource ErrorBrush}"/>
				<Setter Property="FontWeight" Value="Medium"/>
			</DataTrigger>
		</Style.Triggers>

	</Style>

    <!-- Style pour les colonnes de statut -->
    <Style x:Key="StatusBadgeStyle" TargetType="Border">
        <Setter Property="CornerRadius" Value="12"/>
        <Setter Property="Padding" Value="12,4"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- DataTemplate pour afficher des badges de statut -->
    <DataTemplate x:Key="StatusBadgeTemplate">
        <Border Style="{StaticResource StatusBadgeStyle}"
                Background="{Binding Converter={StaticResource StatusToColorConverter}}">
            <TextBlock Text="{Binding}" 
                     Foreground="White"
                     FontSize="11"
                     FontWeight="Medium"
                     HorizontalAlignment="Center"/>
        </Border>
    </DataTemplate>

    <!-- Style pour le message "Aucune donnée" -->
    <Style x:Key="NoDataMessageStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Opacity" Value="0.6"/>
        <Setter Property="Margin" Value="20"/>
    </Style>

    <!-- Template pour afficher un message quand le DataGrid est vide -->
    <ControlTemplate x:Key="EmptyDataGridTemplate">
        <Grid>
            <StackPanel HorizontalAlignment="Center" 
                      VerticalAlignment="Center">
                <materialDesign:PackIcon Kind="DatabaseOff" 
                                       Width="80" Height="80"
                                       Opacity="0.3"
                                       HorizontalAlignment="Center"/>
                <TextBlock Text="Aucune donnée disponible" 
                         Style="{StaticResource NoDataMessageStyle}"/>
            </StackPanel>
        </Grid>
    </ControlTemplate>
	

    <!-- Style pour les lignes alternées -->
    <Style x:Key="AlternatingRowStyle" TargetType="DataGrid" BasedOn="{StaticResource CustomDataGridStyle}">
        <Setter Property="AlternatingRowBackground" Value="{DynamicResource MaterialDesignDivider}"/>
        <Setter Property="AlternationCount" Value="2"/>
    </Style>

</ResourceDictionary>